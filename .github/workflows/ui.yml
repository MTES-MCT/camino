name: UI
on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        description: 'le token pour pouvoir pousser la couverture de code'
        required: true
      DOCKER_USERNAME:
        description: 'le user docker'
        required: true
      DOCKER_TOKEN:
        description: 'le token docker'
        required: true
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.12.2'
          cache: 'npm'
      - name: Install
        run:  make install
      - name: Lint
        run: make lint/ui

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.12.2'
          cache: 'npm'
      - name: Test units
        run: |
          make install
          make test/ui
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ui
  test-storybook:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v4
          with:
            node-version: '20.12.2'
            cache: 'npm'
        - name: Install dependencies
          run: make install
        - name: Install Playwright
          run: npx playwright install --with-deps
        - name: Build Storybook
          run: npm run storybook:build -w packages/ui
        - name: Serve Storybook and run tests
          run: |
            npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
              "npx http-server packages/ui/storybook-static --port 6006 --silent" \
              "npx wait-on tcp:6006 && npm run storybook:test -w packages/ui"
  build:
    needs: [test, test-storybook, lint]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build . --build-arg GIT_SHA=${GITHUB_SHA} -f Dockerfile.ui -t caminofr/camino-ui:${GITHUB_SHA}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Push Docker image to the Docker Hub
        if: github.ref == 'refs/heads/master'
        run: docker push caminofr/camino-ui:${GITHUB_SHA}
