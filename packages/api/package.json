{
  "name": "camino-api",
  "version": "1.0.0",
  "description": "Camino api",
  "private": true,
  "main": "dist/api/src/index.js",
  "scripts": {
    "bim": "npm i && npm run build && npm run db:recreate && npm run db:import",
    "build": "npm run build:api && npm run build:common",
    "build:api": "rm -rf dist && tsc && mkdir -p ./dist/api/src/api/graphql && cp -r ./src/api/graphql/schemas ./dist/api/src/api/graphql",
    "build:common": "cd ../common/ && tsc",
    "daily": "node ./dist/api/src/daily_tasks.js",
    "monthly": "node ./dist/api/src/monthly_tasks.js",
    "db:dump": "pg_dump --host=localhost --username=postgres --clean --if-exists --format=c --no-owner --no-privileges --dbname=camino --file=./backups/camino.sql",
    "db:export": "rm -rf sources && ts-node --transpile-only src/scripts/database-to-json-export.ts",
    "db:import": "pg_restore --host=localhost --username=postgres --clean --if-exists --no-owner --no-privileges --dbname=camino ./backups/camino.sql",
    "db:prod-fetch": "scp -P 212 $u@camino.beta.gouv.fr:/srv/backups/camino.sql backups/",
    "db:public-import": "pg_restore --host=localhost --username=postgres --clean --if-exists --no-owner --no-privileges --dbname=camino ./backups/camino-public.sql",
    "db:recreate": "dropdb --host=localhost --username=postgres camino && createdb --host=localhost --username=postgres camino",
    "db:user": "ts-node ./src/knex/cli-user-add.ts",
    "db:migrate": "ts-node ./src/knex/migrate.ts",
    "db:add-migration": "knex migrate:make",
    "predev": "find ../common/src -name '*.js*' -delete",
    "dev": "nodemon",
    "dev:daily": "ts-node --transpile-only ./src/scripts/daily.ts",
    "dev:daily-debug": "node -r ts-node/register/transpile-only --inspect-brk=3000 ./src/scripts/daily.ts",
    "dev:backups-archive": "tar -zcvf backups/`date +%Y%m%d_%H%M%S`-camino.tar.gz backups/files/* backups/camino.sql",
    "dev:monthly": "ts-node --transpile-only ./src/scripts/monthly.ts",
    "dev:schema": "node src/dev/api/graphql-dsl-to-query-convert.js",
    "dev:update": "npm-check-updates -u && npm install && npm audit fix",
    "documents:check": "node ./dist/api/src/scripts/documents-check.js",
    "lint": "prettier --write . && eslint --fix .",
    "start": "node ./dist/api/src/index.js",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "vitest --environment node --root src/ --config ../vitest.unit.config.ts",
    "test:integration": "JWT_SECRET=secret-tests JWT_SECRET_REFRESH=refresh-secret vitest --environment node --root src/ --config ../vitest.integration.config.ts",
    "test:generate-data": "ts-node --transpile-only src/tools/demarches/tests-creation.ts",
    "ci:lint": "prettier --check . && eslint ."
  },
  "@comment dependencies": {
    "modules esm": "crypto-random-string, @sindresorhus/slugify, email-regex, decamelize, dateformat, node-fetch à ne pas updater tant que on ne compile pas pour es2020: https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c. Pas simple de migrer ts-node.",
    "express-jwt": "attendre la PR de keycloak pour éviter les conflits, car en version 7 The decoded JWT payload is now available as req.auth rather than req.user"
  },
  "dependencies": {
    "@graphql-tools/graphql-file-loader": "^7.5.2",
    "@graphql-tools/load": "^7.7.4",
    "@sentry/node": "^7.11.1",
    "@sentry/types": "^7.11.1",
    "@sindresorhus/slugify": "^1.1.2",
    "@turf/center": "^6.5.0",
    "@turf/intersect": "^6.5.0",
    "@types/basic-auth": "^1.1.3",
    "@types/bcryptjs": "^2.4.2",
    "@types/compression": "1.7.2",
    "@types/cookie-parser": "^1.4.3",
    "@types/cors": "^2.8.12",
    "@types/dateformat": "^5.0.0",
    "@types/express": "^4.17.13",
    "@types/express-jwt": "6.0.4",
    "@types/express-serve-static-core": "^4.17.30",
    "@types/geojson": "^7946.0.10",
    "@types/graphql-type-json": "^0.3.2",
    "@types/graphql-upload": "^8.0.11",
    "@types/jsonwebtoken": "^8.5.8",
    "@types/node": "^18.7.12",
    "@types/node-fetch": "^2.5.12",
    "@types/pg": "^8.6.5",
    "@types/proj4": "^2.5.2",
    "@types/shpjs": "^3.4.1",
    "@types/sql-formatter": "^2.3.0",
    "basic-auth": "^2.0.1",
    "bcryptjs": "^2.4.3",
    "camelcase": "^6.3.0",
    "cerbere": "^0.2.3",
    "chalk": "^4.1.2",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "crypto-random-string": "^3.3.1",
    "dateformat": "^4.5.1",
    "decamelize": "^5.0.0",
    "dotenv": "^16.0.1",
    "email-regex": "4.0.0",
    "express": "^4.18.1",
    "express-graphql": "^0.12.0",
    "express-jwt": "^6.1.1",
    "express-rate-limit": "^6.5.1",
    "geojson-rewind": "^0.3.1",
    "graphql": "^16.6.0",
    "graphql-fields": "^2.0.3",
    "graphql-scalars": "^1.18.0",
    "graphql-type-json": "^0.3.2",
    "graphql-upload": "^13.0.0",
    "html-to-text": "^8.2.1",
    "jsondiffpatch": "^0.4.1",
    "jsonwebtoken": "^8.5.1",
    "jszip": "^3.10.1",
    "knex": "^2.3.0",
    "matomo-tracker": "^2.2.4",
    "node-fetch": "^2.6.5",
    "node-mailjet": "^5.1.1",
    "objection": "github:Vincit/objection.js#dbb20aebaac2059149ec18386283b3cce4a3d7f0",
    "pg": "^8.8.0",
    "proj4": "^2.8.0",
    "shpjs": "^4.0.4",
    "stream-json": "^1.7.4",
    "ts-node": "^10.9.1",
    "tus-node-server": "^0.7.1",
    "typescript": "^4.8.4",
    "xlsx": "^0.18.5",
    "xstate": "^4.34.0"
  },
  "devDependencies": {
    "@types/carbone": "^3.2.1",
    "@types/stream-json": "^1.7.2",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^5.34.0",
    "@typescript-eslint/parser": "^5.34.0",
    "@vitest/coverage-c8": "^0.25.2",
    "carbone": "^3.2.3",
    "eslint": "^8.22.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-config-standard": "^17.0.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-n": "^15.2.5",
    "eslint-plugin-promise": "^6.0.0",
    "eslint-plugin-standard": "^5.0.0",
    "eslint-plugin-tsdoc": "^0.2.16",
    "nodemon": "^2.0.19",
    "pg-escape": "^0.2.0",
    "prettier-eslint": "^15.0.1",
    "sql-formatter": "^9.2.0",
    "supertest": "^6.2.4",
    "vite": "^3.2.4",
    "vitest": "^0.25.2"
  },
  "prettier": {
    "semi": false,
    "singleQuote": true,
    "trailingComma": "none",
    "arrowParens": "avoid"
  },
  "eslintConfig": {
    "parser": "@typescript-eslint/parser",
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:@typescript-eslint/recommended",
      "standard",
      "prettier"
    ],
    "env": {
      "node": true
    },
    "plugins": [
      "@typescript-eslint"
    ],
    "rules": {
      "newline-before-return": 1,
      "no-use-before-define": 0,
      "no-redeclare": 0,
      "no-return-await": "error",
      "default-param-last": 0,
      "no-unused-vars": 0,
      "no-restricted-syntax": [
        "error",
        {
          "message": "leftJoinRelation is deprecated. Use leftJoinRelated instead.",
          "selector": "Identifier[name='leftJoinRelation']"
        }
      ],
      "no-console": [
        "error",
        {
          "allow": [
            "debug",
            "info",
            "warn",
            "error",
            "time",
            "timeEnd"
          ]
        }
      ],
      "@typescript-eslint/explicit-function-return-type": 0,
      "@typescript-eslint/explicit-module-boundary-types": 0,
      "@typescript-eslint/no-empty-interface": 0,
      "@typescript-eslint/no-explicit-any": 0,
      "@typescript-eslint/no-non-null-assertion": 0,
      "@typescript-eslint/no-var-requires": 0,
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_",
          "varsIgnorePattern": "^_"
        }
      ]
    }
  }
}
