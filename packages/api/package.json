{
  "name": "camino-api",
  "version": "1.0.0",
  "description": "Camino api",
  "private": true,
  "main": "./src/index.js",
  "type": "module",
  "scripts": {
    "build": "tsc",
    "daily": "node --loader ts-node/esm/transpile-only ./src/scripts/daily.ts",
    "monthly": "node --loader ts-node/esm/transpile-only ./src/scripts/monthly.ts",
    "db:dump": "pg_dump --host=localhost --username=postgres --clean --if-exists --format=c --no-owner --no-privileges --dbname=camino --file=./backups/camino.sql",
    "db:export": "rm -rf sources && node --loader ts-node/esm/transpile-only src/scripts/database-to-json-export.ts",
    "db:import": "pg_restore --host=localhost --username=postgres --clean --if-exists --no-owner --no-privileges --dbname=camino ./backups/camino.sql",
    "db:prod-fetch": "scp -P 212 $u@camino.beta.gouv.fr:/srv/backups/camino.sql backups/",
    "db:public-import": "pg_restore --host=localhost --username=postgres --clean --if-exists --no-owner --no-privileges --dbname=camino ./backups/camino-public.sql",
    "db:recreate": "dropdb --host=localhost --username=postgres camino && createdb --host=localhost --username=postgres camino",
    "db:migrate": "node --loader ts-node/esm/transpile-only ./src/knex/migrate.ts",
    "db:add-migration": "NODE_OPTIONS='--loader ts-node/esm/transpile-only' knex migrate:make",
    "db:watch": "npx --package=@pgtyped/cli pgtyped -w -c pgtyped-config.json",
    "db:check": "npx --package=@pgtyped/cli pgtyped -c pgtyped-config.ci.json",
    "dev": "node --watch --loader ts-node/esm/transpile-only --inspect ./src/index.ts",
    "daily-debug": "node  --inspect-brk=3000 --loader ts-node/esm/transpile-only ./src/scripts/daily.ts",
    "dev:backups-archive": "tar -zcvf backups/`date +%Y%m%d_%H%M%S`-camino.tar.gz backups/files/* backups/camino.sql",
    "dev:update": "npm-check-updates -u && npm install && npm audit fix",
    "documents:check": "node NODE_OPTIONS='--loader ts-node/esm/transpile-only' ./api/src/scripts/documents-check.ts",
    "lint": "prettier --write . && eslint --fix .",
    "start": "node --loader ts-node/esm/transpile-only ./src/index.ts",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "vitest --environment node --root src/ --config ../vitest.unit.config.ts",
    "test:integration": "NODE_OPTIONS='--loader ts-node/esm/transpile-only' JWT_SECRET=secret-tests vitest --environment node --root src/ --config ../vitest.integration.config.ts",
    "test:generate-data": "node --loader ts-node/esm/transpile-only src/tools/demarches/tests-creation.ts",
    "ci:lint": "prettier --check . && eslint .",
    "matrices": "node --loader ts-node/esm/transpile-only ./src/scripts/matrices.ts"
  },
  "@comment dependencies": {
    "modules esm": "crypto-random-string, @sindresorhus/slugify, email-regex, decamelize, node-fetch Ã  ne pas updater tant que on ne compile pas pour es2020: https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c. Pas simple de migrer ts-node.",
    "express-graphql": "bloque l'upgrade de graphql"
  },
  "dependencies": {
    "@graphql-tools/graphql-file-loader": "^7.5.16",
    "@graphql-tools/load": "^7.8.13",
    "@pgtyped/runtime": "^2.1.0",
    "@sentry/node": "^7.43.0",
    "@sentry/types": "^7.43.0",
    "@sindresorhus/slugify": "^1.1.2",
    "@turf/center": "^6.5.0",
    "@turf/intersect": "^6.5.0",
    "@types/basic-auth": "^1.1.3",
    "@types/bcryptjs": "^2.4.2",
    "@types/compression": "1.7.2",
    "@types/cors": "^2.8.13",
    "@types/express": "^4.17.17",
    "@types/express-serve-static-core": "^4.17.33",
    "@types/geojson": "^7946.0.10",
    "@types/graphql-type-json": "^0.3.2",
    "@types/graphql-upload": "8.0.11",
    "@types/jsonwebtoken": "^9.0.1",
    "@types/node": "^18.15.3",
    "@types/pg": "^8.6.6",
    "@types/proj4": "^2.5.2",
    "@types/shpjs": "^3.4.2",
    "basic-auth": "^2.0.1",
    "bcryptjs": "^2.4.3",
    "camelcase": "^7.0.1",
    "chalk": "^5.2.0",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "crypto-random-string": "^3.3.1",
    "decamelize": "^5.0.0",
    "dotenv": "^16.0.1",
    "email-regex": "4.0.0",
    "express": "^4.18.2",
    "express-graphql": "^0.12.0",
    "express-jwt": "^8.4.1",
    "express-rate-limit": "^6.7.0",
    "geojson-rewind": "^0.3.1",
    "graphql": "^15.8.0",
    "graphql-fields": "^2.0.3",
    "graphql-scalars": "^1.20.4",
    "graphql-type-json": "^0.3.2",
    "graphql-upload": "^13.0.0",
    "html-to-text": "^9.0.4",
    "jsondiffpatch": "^0.4.1",
    "jsonwebtoken": "^9.0.0",
    "jszip": "^3.10.1",
    "knex": "^2.4.2",
    "matomo-tracker": "^2.2.4",
    "node-fetch": "^3.3.0",
    "node-mailjet": "^6.0.2",
    "objection": "github:Vincit/objection.js#dbb20aebaac2059149ec18386283b3cce4a3d7f0",
    "pg": "^8.10.0",
    "prettier": "^2.8.4",
    "proj4": "^2.9.0",
    "shpjs": "^4.0.4",
    "stream-json": "^1.7.5",
    "ts-node": "^10.9.1",
    "tus-node-server": "^0.9.0",
    "xlsx": "^0.18.5",
    "xstate": "^4.37.0"
  },
  "devDependencies": {
    "@types/carbone": "^3.2.1",
    "@types/cookie-parser": "^1.4.3",
    "@types/fs-capacitor": "^2.0.0",
    "@types/stream-json": "^1.7.3",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^5.52.0",
    "@typescript-eslint/parser": "^5.55.0",
    "@vitest/coverage-c8": "^0.31.0",
    "carbone": "^3.5.5",
    "eslint": "^8.36.0",
    "eslint-config-prettier": "^8.7.0",
    "eslint-config-standard": "^17.0.0",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-n": "^15.6.1",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-sql": "^2.3.2",
    "eslint-plugin-tsdoc": "^0.2.1",
    "pg-escape": "^0.2.0",
    "supertest": "^6.3.3",
    "typescript": "^5.0.4",
    "vitest": "^0.31.0"
  },
  "prettier": {
    "semi": false,
    "singleQuote": true,
    "arrowParens": "avoid",
    "trailingComma": "es5",
    "printWidth": 200
  },
  "eslintConfig": {
    "parser": "@typescript-eslint/parser",
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:@typescript-eslint/recommended",
      "standard",
      "prettier"
    ],
    "env": {
      "node": true
    },
    "plugins": [
      "@typescript-eslint",
      "sql"
    ],
    "rules": {
      "sql/format": [
        2,
        {
          "ignoreExpressions": false,
          "ignoreInline": true,
          "ignoreTagless": true
        }
      ],
      "sql/no-unsafe-query": [
        2,
        {
          "allowLiteral": false
        }
      ],
      "newline-before-return": 1,
      "no-use-before-define": 0,
      "no-redeclare": 0,
      "no-return-await": "error",
      "default-param-last": 0,
      "no-unused-vars": 0,
      "no-restricted-syntax": [
        "error",
        {
          "message": "leftJoinRelation is deprecated. Use leftJoinRelated instead.",
          "selector": "Identifier[name='leftJoinRelation']"
        }
      ],
      "no-console": [
        "error",
        {
          "allow": [
            "debug",
            "info",
            "warn",
            "error",
            "time",
            "timeEnd"
          ]
        }
      ],
      "@typescript-eslint/explicit-function-return-type": 0,
      "@typescript-eslint/explicit-module-boundary-types": 0,
      "@typescript-eslint/no-empty-interface": 0,
      "@typescript-eslint/no-explicit-any": 0,
      "@typescript-eslint/no-non-null-assertion": 0,
      "@typescript-eslint/no-var-requires": 0,
      "@typescript-eslint/ban-ts-comment": 0,
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_",
          "varsIgnorePattern": "^_"
        }
      ]
    }
  }
}
