# import * from 'scalars.graphql'
# import * from 'administrations.graphql'
# import * from 'documents.graphql'
# import * from 'entreprises.graphql'
# import * from 'geojsons.graphql'
# import * from 'metas-activites.graphql'
# import * from 'metas.graphql'
# import * from 'points.graphql'
# import * from 'statistiques.graphql'
# import * from 'substances.graphql'
# import * from 'territoires.graphql'
# import * from 'titres-activites.graphql'
# import * from 'titres-demarches.graphql'
# import * from 'titres-etapes.graphql'
# import * from 'titres.graphql'
# import * from 'utilisateurs.graphql'
# import * from 'titre-demande.graphql'
# import * from 'journaux.graphql'

"""
# API de Camino

> [Documentation](https://docs.camino.beta.gouv.fr)

## Lecture

Certaines requêtes sont publiques.

Certaines requêtes sont protégées et nécessitent une authentification par token (jwt).

La plupart des requêtes retournent un résultat plus ou moins riche selon le niveau de permission de l'utilisateur authentifié.
"""
type Query {
  "Version de l'API"
  version: String

  "Titre minier en fonction de son id"
  titre(id: ID!): Titre

  "Liste de titres miniers, en fonction d'arguments (optionnels)"
  titres(
    intervalle: Int
    page: Int
    colonne: String
    ordre: String
    ids: [ID]
    perimetre: [Float!]
    typesIds: [ID]
    domainesIds: [ID]
    statutsIds: [ID]
    substancesIds: [ID]
    entreprisesIds: [ID]
    substances: String
    noms: String
    entreprises: String
    references: String
    territoires: String
    communes: String
    departements: [String]
    regions: [String]
    facadesMaritimes: [String]
    demandeEnCours: Boolean
  ): Titres

  "Liste de titres miniers, en fonction d'arguments (optionnels)"
  demarches(
    intervalle: Int
    page: Int
    colonne: String
    ordre: String
    typesIds: [ID]
    travauxTypesIds: [ID]
    statutsIds: [ID]
    etapesInclues: [InputEtapeFiltre]
    etapesExclues: [InputEtapeFiltre]
    titresTypesIds: [ID]
    titresDomainesIds: [ID]
    titresStatutsIds: [ID]
    titresIds: [String]
    titresEntreprisesIds: [String]
    titresSubstancesIds: [String]
    titresReferences: String
    titresTerritoires: String
    travaux: Boolean
  ): Demarches

  "Démarche en fonction de son id"
  demarche(id: ID!): Demarche

  "Étape d’une démarche en fonction de son id"
  etape(id: ID!): Etape

  etapeHeritage(date: String!, titreDemarcheId: ID!, typeId: ID!): EtapeHeritage

  "Liste des activités"
  activites(
    intervalle: Int
    page: Int
    colonne: String
    ordre: String
    typesIds: [ID]
    annees: [String]
    statutsIds: [ID]
    titresTypesIds: [ID]
    titresDomainesIds: [ID]
    titresStatutsIds: [ID]
    titresIds: [String]
    titresEntreprisesIds: [String]
    titresSubstancesIds: [String]
    titresReferences: String
    titresTerritoires: String
  ): Activites

  "Types d'activités"
  activitesTypes: [ActiviteType]

  "Statuts des activités"
  activitesStatuts: [ActiviteStatut]

  "Types de démarches"
  demarchesTypes: [DemarcheType]

  "Statuts de démarches"
  demarchesStatuts: [DemarcheStatut]

  "Types d'étapes"
  etapesTypes(travaux: Boolean): [EtapeType]

  "Status d'étapes"
  etapesStatuts: [EtapeStatut]

  "Utilisateur en fonction de son id"
  utilisateur(id: ID!): Utilisateur

  "Liste d'utilisateurs en fonction d'arguments (optionnels)"
  utilisateurs(intervalle: Int, page: Int, colonne: String, ordre: String, entreprisesIds: [ID], administrationIds: [ID], roles: [ID], noms: String, emails: String): Utilisateurs

  "Liste des substances"
  substances: [Substance]

  "Metas"
  devises: [Devise]
  documentsTypes(repertoire: ID, typeId: ID): [DocumentType]
  domaines: [Domaine]
  geoSystemes: [GeoSysteme]
  referencesTypes: [ReferenceType]
  statuts: [TitreStatut]
  types: [TitreTypeType]
  unites: [Unite]
  administrationsTypes: [AdministrationType]
  departements: [Departement]
  regions: [Region]
  phasesStatuts: [PhaseStatut]
  titresTypes: [TitreType]

  titresTypesTitresStatuts: [TitreTypeTitreStatut]

  titresTypesDemarchesTypesEtapesTypes: [TitreTypeDemarcheTypeEtapeType]
  etapesTypesDocumentsTypes: [EtapeTypeDocumentType]

  "Liste des entreprises"
  entreprises(intervalle: Int, page: Int, colonne: String, ordre: String, noms: String, etapeId: ID, archive: Boolean, etapeUniquement: Boolean): Entreprises

  entreprisesTitresCreation: [Entreprise]

  "Administration en fonction de son id"
  administration(id: ID!): Administration

  "Les emails à notifier pour un type d’activité"
  administrationActivitesTypesEmails(id: ID!): [ActiviteTypeEmail]

  "Liste des administrations"
  administrations: [Administration]

  "Statistiques"
  statistiquesGlobales: StatistiquesGlobales

  "Définitions et descriptions"
  definitions: [Definition]

  pays: [Pays]

  "Retourne des points et les informations du périmètre à partir d’un fichier GeoJson ou Shape"
  pointsImporter(fileUpload: FileUpload!, geoSystemeId: String!, demarcheId: String!, etapeTypeId: String!): PointsImport

  "Calcule les informations relatives au périmètre d’une nouvelle étape"
  perimetreInformations(points: [InputPoint]!, demarcheId: String!, etapeTypeId: String!): PerimetreInformations

  "Calcule les informations relatives au périmètre d’une étape existante"
  titreEtapePerimetreInformations(titreEtapeId: String!): PerimetreInformations

  journaux(page: Int!, recherche: String, titreId: String): Journaux
}

"""
# API de Camino

> [Documentation](https://docs.camino.beta.gouv.fr)

## Écriture

Ces requêtes sont __protégées__. Elles nécessitent une authentification par token (jwt) et un niveau de permission suffisant.
"""
type Mutation {
  newsletterInscrire(email: String!): String

  "Crée un titre minier"
  titreCreer(titre: InputTitreCreation!): Titre

  "Crée une démarche et met à jour le titre minier"
  demarcheCreer(demarche: InputDemarcheCreation!): Titre

  "Modifie une démarche et met à jour le titre minier"
  demarcheModifier(demarche: InputDemarcheModification!): Titre

  "Supprime une démarche et met à jour le titre minier"
  demarcheSupprimer(id: ID!): Titre

  "Crée une étape et met à jour le titre minier"
  etapeCreer(etape: InputEtapeCreation!): Etape

  "Modifie une étape et met à jour le titre minier"
  etapeModifier(etape: InputEtapeModification!): Etape

  "Supprime une étape et met à jour le titre minier"
  etapeSupprimer(id: ID!): Titre

  "Dépose une demande et met à jour le titre minier"
  etapeDeposer(id: ID!): Titre

  "Crée un document et met à jour le titre minier"
  documentCreer(document: InputDocumentCreation!): Document

  "Modifie un document et met à jour le titre minier"
  documentModifier(document: InputDocumentModification!): Document

  "Supprime un document et met à jour le titre minier"
  documentSupprimer(id: ID!): Boolean

  "Dépose une activité"
  activiteDeposer(id: ID!): Activite

  "Supprime une activité"
  activiteSupprimer(id: ID!): Activite

  administrationActiviteTypeEmailCreer(administrationActiviteTypeEmail: InputAdministrationActiviteTypeEmail!): Administration

  administrationActiviteTypeEmailSupprimer(administrationActiviteTypeEmail: InputAdministrationActiviteTypeEmail!): Administration

  titreDemandeCreer(titreDemande: InputTitreDemande): TitreDemandeIds
}
